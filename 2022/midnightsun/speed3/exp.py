#!/usr/bin/python

from pwn import *
import sys

remote_ip, port = 'speed-03.hfsc.tf', 45000
binary = './speed3'
brkpts = '''
set follow-fork-mode parent
c
'''

elf = ELF("speed3")
libc = ELF("/lib/x86_64-linux-gnu/libc.so.6")

context.terminal = ['tmux', 'splitw', '-h']
context.arch = "amd64"
context.log_level = "debug"
context.aslr = False

re = lambda a: io.recv(a)
reu = lambda a: io.recvuntil(a)
rl = lambda: io.recvline()
s = lambda a: io.send(a)
sl = lambda a: io.sendline(a)
sla = lambda a,b: io.sendlineafter(a,b)
sa = lambda a,b: io.sendafter(a,b)

uu64 = lambda a: u64(a.ljust(8, chr(0)))

if len(sys.argv) > 1 and sys.argv[1] == "-r":
    io = remote(remote_ip, port)
    context.noptrace = True

elif len(sys.argv) > 1:
    io = gdb.debug(binary, brkpts)

else:
    io = process(binary)

if __name__ == "__main__":
    # gdb.attach(io, brkpts)
    # sla("c4t:\x1B[0m ", "'")
    io.interactive()
